{"remainingRequest":"/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/pug-plain-loader/index.js!/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Presupuestos/U2_Presupuestos/src/views/curso/Tema1.vue?vue&type=template&id=0d7b1bbc&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Presupuestos/U2_Presupuestos/src/views/curso/Tema1.vue","mtime":1740799664048},{"path":"/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Presupuestos/U2_Presupuestos/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXJzby1tYWluLWNvbnRhaW5lciBwYi0zIn0sW19jKCdCYW5uZXJJbnRlcm5vJyx7YXR0cnM6eyJzdWJUaXR1bG8iOicxLiBGdW5kYW1lbnRvcyBkZWwgUHJlc3VwdWVzdG8gZGUgUHJvZHVjY2nDs24geSBWZW50YXMnfX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29udGFpbmVyIHRhcmpldGEgdGFyamV0YS0tYmxhbmNhIHAtNCBwLW1kLTUgb3ZlcmZsb3ctaGlkZGVuIn0sW192bS5fbSgwKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi00In0sW192bS5fdigiRXN0ZSBwcmVzdXB1ZXN0byBzZSBkaXZpZGUgZW4gZG9zIHBhcnRlczoiKV0pLF9jKCdUYWJzQycse3N0YXRpY0NsYXNzOiJjb2xvci1hY2VudG8tY29udGVuaWRvIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0YWJzLWNvbnRlbnQgYm9yZGVyIHB4LTQgcC1tZC01IHB5LTMiLGF0dHJzOnsidGl0dWxvIjoiUHJlc3VwdWVzdG8gZGUgcHJvZHVjY2nDs24iLCJpY29uIjpyZXF1aXJlKCdAL2Fzc2V0cy9idWxsZXRzL2ljb24tdGFiLWMtMS5zdmcnKX19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcgY29sLXhsLTggbWItNCBtYi1tZC0wIG9yZGVyLTIifSxbX2MoJ2g0JyxbX3ZtLl92KCJQcmVzdXB1ZXN0byBkZSBwcm9kdWNjacOzbiIpXSksX2MoJ3AnLFtfdm0uX3YoIlNlIGVsYWJvcmEgYSBwYXJ0aXIgZGVsIHByZXN1cHVlc3RvIGRlIHZlbnRhcyB5IGRldGVybWluYSBsYXMgY2FudGlkYWRlcyBhIHByb2R1Y2lyIGNvbnNpZGVyYW5kbyBsYXMgcHJveWVjY2lvbmVzIGRlIGRlbWFuZGEgeSBsb3Mgbml2ZWxlcyBkZSBpbnZlbnRhcmlvIGRlc2VhZG9zLiBJbXBsaWNhIGxhIHBsYW5pZmljYWNpw7NuIGRlIGxvcyByZWN1cnNvcyBtYXRlcmlhbGVzLCBodW1hbm9zIHkgdMOpY25pY29zIG5lY2VzYXJpb3MuIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLW1kLTggY29sLWxnLTUgY29sLXhsLTQgb3JkZXItMSBtYi0zIG1iLWxnLTAifSxbX2MoJ2ZpZ3VyZScse2F0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzIucG5nIiksImFsdCI6IiJ9fSldKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRhYnMtY29udGVudCBib3JkZXIgcHgtNCBwLW1kLTUgcHktMyIsYXR0cnM6eyJ0aXR1bG8iOiJQcmVzdXB1ZXN0byBkZSB2ZW50YXMiLCJpY29uIjpyZXF1aXJlKCdAL2Fzc2V0cy9idWxsZXRzL2ljb24tdGFiLWMtMi5zdmcnKX19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcgY29sLXhsLTggbWItNCBtYi1tZC0wIG9yZGVyLTIifSxbX2MoJ2g0JyxbX3ZtLl92KCJQcmVzdXB1ZXN0byBkZSB2ZW50YXMiKV0pLF9jKCdwJyxbX3ZtLl92KCJFc3RpbWEgbG9zIGluZ3Jlc29zIGVzcGVyYWRvcyBwb3IgbGEgY29tZXJjaWFsaXphY2nDs24gZGUgcHJvZHVjdG9zIG8gc2VydmljaW9zLCB0ZW5pZW5kbyBlbiBjdWVudGEgZmFjdG9yZXMgY29tbyB0ZW5kZW5jaWFzIGRlbCBtZXJjYWRvLCBlc3RyYXRlZ2lhcyBkZSBwcmVjaW9zIHkgcG9sw610aWNhcyBjb21lcmNpYWxlcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbWQtOCBjb2wtbGctNSBjb2wteGwtNCBvcmRlci0xIG1iLTMgbWItbGctMCJ9LFtfYygnZmlndXJlJyx7YXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4ifX0sW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMy5wbmciKSwiYWx0IjoiIn19KV0pXSldKV0pXSksX3ZtLl9tKDEpLF92bS5fbSgyKSxfYygncCcsW192bS5fdigiRWwgcHJlc3VwdWVzdG8gZW4gbGEgZ2VzdGnDs24gZW1wcmVzYXJpYWwgZXMgdW5hIGhlcnJhbWllbnRhIGNsYXZlIHBhcmEgcGxhbmlmaWNhciwgY29vcmRpbmFyIHkgY29udHJvbGFyIGxvcyByZWN1cnNvcyBmaW5hbmNpZXJvcyBkZSB1bmEgb3JnYW5pemFjacOzbi4gU3UgcHJvcMOzc2l0byBwcmluY2lwYWwgZXMgZXN0aW1hciBsb3MgaW5ncmVzb3MgeSBlZ3Jlc29zIGR1cmFudGUgdW4gcGVyw61vZG8gZXNwZWPDrWZpY28sIGZhY2lsaXRhbmRvIGxhIHRvbWEgZGUgZGVjaXNpb25lcyBlc3RyYXTDqWdpY2FzIHkgb3BlcmF0aXZhcy4iKV0pLF92bS5fbSgzKSxfYygnaDInLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIkVqZW1wbG8gcHLDoWN0aWNvOiBwcmVzdXB1ZXN0byBkZSB1bmEgZW1wcmVzYSBkZSBjYWx6YWRvIildKSxfdm0uX20oNCksX3ZtLl9tKDUpLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTUifSxbX3ZtLl92KCJFbCBwcmVzdXB1ZXN0byBubyBlcyBzb2xvIHVuIHJlZ2lzdHJvIGNvbnRhYmxlLCBzaW5vIHVuIGluc3RydW1lbnRvIGRpbsOhbWljbyBxdWUgaW50ZWdyYSBvYmpldGl2b3MgZXN0cmF0w6lnaWNvcyB5IHByb3llY2Npb25lcyBmaW5hbmNpZXJhcywgb3B0aW1pemFuZG8gbGEgYXNpZ25hY2nDs24gZGUgcmVjdXJzb3MgeSBwZXJtaXRpZW5kbyBhbnRpY2lwYXIgZXNjZW5hcmlvcyBmdXR1cm9zLiIpXSksX3ZtLl9tKDYpLF9jKCdoMicse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRWplbXBsbyBwcsOhY3RpY286IHByZXN1cHVlc3RvIHBhcmEgZWwgbGFuemFtaWVudG8gZGUgdW5hIHBsYXRhZm9ybWEgZGlnaXRhbCIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItNSJ9LFtfdm0uX3YoIlVuYSBlbXByZXNhIGRlIHNlcnZpY2lvcyB0ZWNub2zDs2dpY29zIHBsYW5lYSBsYW56YXIgdW5hIG51ZXZhIHBsYXRhZm9ybWEgZGlnaXRhbCB5LCB0cmFzIHVuIGVzdHVkaW8gZGUgbWVyY2FkbywgcHJveWVjdGEgdW4gaW5jcmVtZW50byBkZWwgMjAgJSBlbiBsYSBkZW1hbmRhIGR1cmFudGUgZWwgcHJpbWVyIGHDsW8uIEVuIGZ1bmNpw7NuIGRlIGVzdG8sIGVsIHByZXN1cHVlc3RvIGNvbnRlbXBsYToiKV0pLF92bS5fbSg3KSxfdm0uX20oOCksX3ZtLl9tKDkpLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQifSxbX3ZtLl92KCJMb3MgY29tcG9uZW50ZXMgZGVsIHByZXN1cHVlc3RvIGRlIHByb2R1Y2Npw7NuIHkgdmVudGFzIHNvbiBlc2VuY2lhbGVzIHBhcmEgbGEgcGxhbmlmaWNhY2nDs24gZmluYW5jaWVyYSB5IG9wZXJhdGl2YSBkZSB1bmEgb3JnYW5pemFjacOzbi4gRXN0ZSBwcmVzdXB1ZXN0byBpbmNsdXllIGxhIHByb3llY2Npw7NuIGRlIHZlbnRhcywgbGEgcGxhbmlmaWNhY2nDs24gZGUgbGEgcHJvZHVjY2nDs24sIGVsIGFuw6FsaXNpcyBkZSBpbnZlbnRhcmlvcyB5IGxhIGZpamFjacOzbiBkZSBwcmVjaW9zLCBsbyBxdWUgcGVybWl0ZSBjb29yZGluYXIgeSBvcHRpbWl6YXIgZWwgZmx1am8gZGUgcmVjdXJzb3MgZW4gZnVuY2nDs24gZGUgbG9zIG9iamV0aXZvcyBlc3RyYXTDqWdpY29zLiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtc3RhcnQgbWItNSJ9LFtfdm0uX20oMTApLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTgifSxbX2MoJ0Fjb3JkaW9uQScse2F0dHJzOnsidGlwbyI6ImIifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IlByZXN1cHVlc3RvIGRlIHZlbnRhcyJ9fSxbX2MoJ3AnLFtfdm0uX3YoIlByb3llY3RhIGxhIGNhbnRpZGFkIGRlIHByb2R1Y3RvcyBvIHNlcnZpY2lvcyBhIGNvbWVyY2lhbGl6YXIgZW4gdW4gcGVyw61vZG8gZGV0ZXJtaW5hZG8uIFNlIGJhc2EgZW4gZXN0dWRpb3MgZGUgbWVyY2FkbyB5IHRlbmRlbmNpYXMgZGUgY29uc3VtbywgZXN0YWJsZWNpZW5kbyBtZXRhcyBxdWUgb3JpZW50YW4gbGEgcGxhbmlmaWNhY2nDs24gZGUgbGEgcHJvZHVjY2nDs24uIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiZGl2IixhdHRyczp7InRpdHVsbyI6IlByZXN1cHVlc3RvIGRlIHByb2R1Y2Npw7NuIn19LFtfYygncCcsW192bS5fdigiRGV0ZXJtaW5hIGxhIGNhbnRpZGFkIGRlIHVuaWRhZGVzIGEgZmFicmljYXIgcGFyYSBzYXRpc2ZhY2VyIGxhIGRlbWFuZGEgZXN0aW1hZGEuIENvbnNpZGVyYSBpbnZlbnRhcmlvcyBpbmljaWFsZXMgeSBmaW5hbGVzLCBhc8OtIGNvbW8gY29zdG9zIGRpcmVjdG9zIGUgaW5kaXJlY3RvcyBkZSBmYWJyaWNhY2nDs24sIGNvbW8gbWF0ZXJpYSBwcmltYSwgbWFubyBkZSBvYnJhIGUgaW5zdW1vcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJkaXYiLGF0dHJzOnsidGl0dWxvIjoiRmlqYWNpw7NuIGRlIHByZWNpb3MgZGUgdmVudGEifX0sW19jKCdwJyxbX3ZtLl92KCJTZSBkZWZpbmUgZW4gZnVuY2nDs24gZGUgbG9zIGNvc3RvcyBkZSBwcm9kdWNjacOzbiB5IGVsIHZhbG9yIHBlcmNpYmlkbyBlbiBlbCBtZXJjYWRvLiBTdSBvYmpldGl2byBlcyBnYXJhbnRpemFyIHJlbnRhYmlsaWRhZCB5IGNvbXBldGl0aXZpZGFkLCBhc2VndXJhbmRvIGxhIHJlY3VwZXJhY2nDs24gZGUgY29zdG9zLiIpXSldKV0pXSwxKV0pLF92bS5fbSgxMSksX3ZtLl9tKDEyKSxfdm0uX20oMTMpLF9jKCdoMicse2F0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLWxlZnQifX0sW192bS5fdigiRWplbXBsbyBwcsOhY3RpY28geSBkaWTDoWN0aWNvIildKSxfdm0uX20oMTQpLF9jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTQifSxbX3ZtLl92KCJFc3RlIGPDoWxjdWxvIHBlcm1pdGUgcGxhbmlmaWNhciBsYSBwcm9kdWNjacOzbiBkZSBtYW5lcmEgZWZpY2llbnRlLCBhc2VndXJhbmRvIGxhIGRpc3BvbmliaWxpZGFkIGRlbCBwcm9kdWN0byBzaW4gaW5jdXJyaXIgZW4gY29zdG9zIGV4Y2VzaXZvcyBwb3Igc29icmVwcm9kdWNjacOzbiBvIGVuZnJlbnRhciBkw6lmaWNpdCBkZSBpbnZlbnRhcmlvLCBsbyBxdWUgZm9ydGFsZWNlIGxhIHRvbWEgZGUgZGVjaXNpb25lcyB5IGxhIGNvbXBldGl0aXZpZGFkIGVuIGVsIG1lcmNhZG8uIildKSxfdm0uX20oMTUpLF92bS5fbSgxNiksX3ZtLl9tKDE3KSxfdm0uX20oMTgpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBiZy1jb2xvci1pbmZvIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicC00IHAtbWQtNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLWNlbnRlciBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTcifSxbX2MoJ0ltYWdlbkluZm9ncmFmaWNhJyx7c3RhdGljQ2xhc3M6ImNvbG9yLXNlY3VuZGFyaW8iLHNjb3BlZFNsb3RzOl92bS5fdShbe2tleToiaW1hZ2VuIixmbjpmdW5jdGlvbigpe3JldHVybiBbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byIsc3RhdGljU3R5bGU6eyJtYXgtd2lkdGgiOiIxMTA2cHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTcuc3ZnIiksImFsdCI6IiJ9fSldKV19LHByb3h5OnRydWV9XSl9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWNvbG9yLXdoaXRlIGJveC1zaGFkb3cgcC0zIixhdHRyczp7IngiOiI0MSUiLCJ5IjoiOS41JSIsIm51bWVybyI6IisifX0sW19jKCdoNScsW192bS5fdigiMDEuIFByZXN1cHVlc3RvIHBsYW5pZmljYWRvIildKSxfYygncCcsW192bS5fdigiU2UgcHJveWVjdGEgdW4gaW5jcmVtZW50byBkZSBpbmdyZXNvcyBkZWwgMTUgJS4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1jb2xvci13aGl0ZSBib3gtc2hhZG93IHAtMyIsYXR0cnM6eyJ4IjoiODclIiwieSI6IjM3JSIsIm51bWVybyI6IisifX0sW19jKCdoNScsW192bS5fdigiMDIuIFNlZ3VpbWllbnRvIHkgcmVzdWx0YWRvcyByZWFsZXMiKV0pLF9jKCdwJyxbX3ZtLl92KCJTZSBkZXRlY3RhIHF1ZSBsYXMgdmVudGFzIHJlYWxlcyBmdWVyb24gdW4gMTAgJSBtZW5vcmVzIGEgbG8gcHJldmlzdG8uIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBwLTMiLGF0dHJzOnsieCI6IjY4JSIsInkiOiI4MSUiLCJudW1lcm8iOiIrIn19LFtfYygnaDUnLFtfdm0uX3YoIjAzLiBBbsOhbGlzaXMgZGUgZGVzdmlhY2lvbmVzIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW19jKCdiJyxbX3ZtLl92KCJGYWN0b3JlcyBpbnRlcm5vczoiKV0pLF92bS5fdigiIFJldHJhc29zIGVuIHByb2R1Y2Npw7NuLCBpbmVmaWNpZW5jaWFzIGVuIGxhIGRpc3RyaWJ1Y2nDs24uICIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfYygnYicsW192bS5fdigiRmFjdG9yZXMgZXh0ZXJub3M6IildKSxfdm0uX3YoIiBDYW1iaW9zIGVuIGxhIGRlbWFuZGEsIGF1bWVudG9zIGVuIGVsIGNvc3RvIGRlIGluc3Vtb3MuIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3Itd2hpdGUgYm94LXNoYWRvdyBwLTMiLGF0dHJzOnsieCI6IjE2JSIsInkiOiI1NiUiLCJudW1lcm8iOiIrIn19LFtfYygnaDUnLFtfdm0uX3YoIjA0LiBBY2Npb25lcyBjb3JyZWN0aXZhcyIpXSksX2MoJ3AnLFtfdm0uX3YoIlJlZm9yemFyIGxhIGVzdHJhdGVnaWEgZGUgbWFya2V0aW5nLCBhanVzdGFyIGxhIHBsYW5pZmljYWNpw7NuIGRlIGxhIHByb2R1Y2Npw7NuLiIpXSldKV0pXSwxKV0pXSldKSxfdm0uX20oMTkpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctZnVsbC13aWR0aCBib3JkZXItdG9wIGNvbG9yLXByaW1hcmlvIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicC00IHAtbWQtNSJ9LFtfYygnaDInLHthdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfdm0uX3YoIk1BVEVSSUFMIENPTVBMRU1FTlRBUklPIildKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBtYXRlcmlhbC1jb21wbGVtZW50YXJpbyJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC0xMiBjb2wtbWQtNiBjb2wtbGctNyJ9LFtfYygncCcsW192bS5fdigiTG9zIGludml0YW1vcyBhIGV4cGxvcmFyIGVsIG1hdGVyaWFsIGNvbXBsZW1lbnRhcmlvIGRlIGVzdGUgY3Vyc28sIGVuIGVzdGEgc2VjY2nDs24gZW5jb250cmFyw6EgcmVjdXJzb3MgcXVlIGxlIHBlcm1pdGlyw6FuIHByb2Z1bmRpemFyIHkgZW5yaXF1ZWNlciBzdSBhcHJlbmRpemFqZSBlbiBsb3MgdGVtYXMgdHJhdGFkb3MgZW4gZXN0YSB1bmlkYWQuIildKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2F1bGFzdmlydHVhbGVzLnVuaXF1aW5kaW8uZWR1LmNvL1JlY0RpZ2l0YWwvUHJlc3VwdSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiVW5pdmVyc2lkYWQgZGVsIFF1aW5kw61vLiAocy5mLikuIFByZXN1cHVlc3RvIGRlIHByb2R1Y2Npw7NuLiBSZWN1cGVyYWRvIGRlICIpXSldKSxfYygncCcse3N0YXRpY0NsYXNzOiJkLWZsZXggbXktNCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1lLTMiLHN0eWxlOih7J21heC13aWR0aCc6JzE2cHgnfSksYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2FjdHVhbGljZXNlLmNvbS9lbGFib3JhY2lvbi1wcmVzdXB1ZXN0by1wcm9kdWNjaW9uLWNvbmNlcHRvcy1iZW5lZmljaW9zIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJBY3R1YWzDrWNlc2UuICgyMDIyKS4gTGEgZWxhYm9yYWNpw7NuIGRlbCBwcmVzdXB1ZXN0byBkZSBwcm9kdWNjacOzbjogQ29uY2VwdG9zIHkgYmVuZWZpY2lvcy4gIildKV0pLF9jKCdwJyx7c3RhdGljQ2xhc3M6ImQtZmxleCBteS00In0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibWUtMyIsc3R5bGU6KHsnbWF4LXdpZHRoJzonMTZweCd9KSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnIil9fSksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTlFYXhZMS02eHJjIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJCcmF2byBQLiAoMjAxOSwgZGljaWVtYnJlIDExKS4gQ29zdG9zIHkgcHJlc3VwdWVzdG9zLiBQYXNjdWFsIEJyYXZvIFZpcnR1YWwuIFtWaWRlb10gWW91VHViZS4gIildKV0pXSksX3ZtLl9tKDIwKV0pXSldKV0sMSldLDEpfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW2Z1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoIGJnLWg4NS0zIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJweC00IHAtbWQtNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLWNlbnRlciJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy05IG1iLTMgbWItbGctMCIsYXR0cnM6eyJkYXRhLWFvcyI6ImZhZGUtbGVmdCJ9fSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibXQtNSJ9LFtfdm0uX3YoIkVsIHByZXN1cHVlc3RvIGRlIHByb2R1Y2Npw7NuIHkgdmVudGFzIGVzIHVuYSBoZXJyYW1pZW50YSBlc2VuY2lhbCBwYXJhIGxhIHBsYW5pZmljYWNpw7NuIGZpbmFuY2llcmEgZGUgbGFzIG9yZ2FuaXphY2lvbmVzLCB5YSBxdWUgcGVybWl0ZSBwcm95ZWN0YXIgeSBjb29yZGluYXIgbGFzIGFjdGl2aWRhZGVzIHByb2R1Y3RpdmFzIHkgY29tZXJjaWFsZXMgY29uIGVsIGZpbiBkZSBhbGNhbnphciBsb3Mgb2JqZXRpdm9zIGVzdHJhdMOpZ2ljb3MgZXN0YWJsZWNpZG9zLiBGYWNpbGl0YSBsYSBlc3RpbWFjacOzbiBkZSByZWN1cnNvcyBuZWNlc2FyaW9zIHkgcGVybWl0ZSBhbnRpY2lwYXIgcG9zaWJsZXMgZGVzYWbDrW9zIG9wZXJhdGl2b3MuIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTMiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImltZy1mbHVpZCBteC1hdXRvIG14LWxnLTAgbXMtbGctYXV0byBtYi00IG1iLWxnLTAiLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiNDg2cHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMS5zdmciKSwiYWx0IjoiIn19KV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtY2VudGVyIG1iLTUifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctOCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB5LTQgcHgtNSBiZy1jb2xvci0xIG1iLTMiLGF0dHJzOnsiZGF0YS1hb3MiOiJmYWRlLXVwIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctYXV0byJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8iLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS80LnN2ZyIpfX0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGcifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkxhIGludGVncmFjacOzbiBkZSBhbWJvcyBwcmVzdXB1ZXN0b3MgcGVybWl0ZSBjb29yZGluYXIgZWZpY2F6bWVudGUgbGFzIMOhcmVhcyBvcGVyYXRpdmFzIHkgY29tZXJjaWFsZXMsIGFzZWd1cmFuZG8gcXVlIGxhIHByb2R1Y2Npw7NuIHNlIGFsaW5lZSBjb24gbGFzIGV4cGVjdGF0aXZhcyBkZWwgbWVyY2Fkby4gQWRlbcOhcywgZmFjaWxpdGEgbGEgZGV0ZWNjacOzbiBkZSBkZXN2aWFjaW9uZXMgeSBsYSBpbXBsZW1lbnRhY2nDs24gZGUgbWVkaWRhcyBjb3JyZWN0aXZhcyBvcG9ydHVuYXMuIildKV0pXSldKSxfYygncCcsW192bS5fdigiRW4gdW4gY29udGV4dG8gZW1wcmVzYXJpYWwgZGluw6FtaWNvIHkgY29tcGV0aXRpdm8sIGNvbnRhciBjb24gcHJlc3VwdWVzdG9zIGJhc2Fkb3MgZW4gaW5mb3JtYWNpw7NuIGFjdHVhbGl6YWRhIHJlc3VsdGEgY2xhdmUgcGFyYSBsYSB0b21hIGRlIGRlY2lzaW9uZXMgZXN0cmF0w6lnaWNhcy4gRWwgdXNvIGRlIGhlcnJhbWllbnRhcyB0ZWNub2zDs2dpY2FzIHkgbWV0b2RvbG9nw61hcyBkZSBhbsOhbGlzaXMgZGUgZGF0b3MgY29udHJpYnV5ZSBhIG1lam9yYXIgbGEgcHJlY2lzacOzbiBkZSBsYXMgcHJveWVjY2lvbmVzLCBmb3J0YWxlY2llbmRvIGxhIGNhcGFjaWRhZCBkZSBhZGFwdGFjacOzbiB5IHJlc2lsaWVuY2lhIGRlIGxhcyBvcmdhbml6YWNpb25lcy4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCBtYi0zIG1iLWxnLTAifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvNS5wbmciKSwiYWx0IjoiIiwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRpdHVsby1zZWd1bmRvIixhdHRyczp7ImlkIjoidF8xXzEiLCJkYXRhLWFvcyI6ImZsaXAtdXAifX0sW19jKCdoMicsW19jKCdzcGFuJyxbX3ZtLl92KCIxLjEiKV0pLF92bS5fdigiIENvbmNlcHRvIHkgcHJvcMOzc2l0byBkZWwgcHJlc3VwdWVzdG8gZW4gbGEgZ2VzdGnDs24gZW1wcmVzYXJpYWwiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoLTIgYmctZm9uZG8tMSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcHgtbWQtNSBwYi1tZC0zIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgYWxpZ24taXRlbXMtc3RyZXRjaCBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTYgbWItNCIsYXR0cnM6eyJkYXRhLWFvcyI6Inpvb20taW4tdXAifX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmQtMiBoLTEwMCJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkX19pbWFnZSIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzYucG5nIiksImFsdCI6IiJ9fSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9fdGV4dCBwLTQifSxbX2MoJ2g1Jyx7c3RhdGljQ2xhc3M6Im1iLTIgdGV4dC1jZW50ZXIifSxbX3ZtLl92KCJDb25jZXB0byBkZSBwcmVzdXB1ZXN0byIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkVzIHVuYSBwcm95ZWNjacOzbiBmaW5hbmNpZXJhIHF1ZSBkZXRhbGxhIGluZ3Jlc29zIHkgZ2FzdG9zIHByZXZpc3RvcywgZ3VpYW5kbyBsYXMgb3BlcmFjaW9uZXMgZmluYW5jaWVyYXMgcGFyYSBsb2dyYXIgbG9zIG9iamV0aXZvcyBvcmdhbml6YWNpb25hbGVzLiIpXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNiBtYi00IixhdHRyczp7ImRhdGEtYW9zIjoiem9vbS1pbi1kb3duIn19LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1pbWFnZS1jYXJkLTIgaC0xMDAifSxbX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJjdXN0b20taW1hZ2UtY2FyZF9faW1hZ2UiLGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS83LnBuZyIpLCJhbHQiOiIifX0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWltYWdlLWNhcmRfX3RleHQgcC00In0sW19jKCdoNScse3N0YXRpY0NsYXNzOiJtYi0yIHRleHQtY2VudGVyIn0sW192bS5fdigiUHJvcMOzc2l0byIpXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIlBlcm1pdGUgYW50aWNpcGFyIG5lY2VzaWRhZGVzIGZpbmFuY2llcmFzLCBkZXRlY3RhciBkZXN2aWFjaW9uZXMgeSBlc3RhYmxlY2VyIG1lZGlkYXMgY29ycmVjdGl2YXMuIEZhY2lsaXRhIGxhIGNvbXVuaWNhY2nDs24gZW50cmUgZGVwYXJ0YW1lbnRvcyB5IGFsaW5lYSBlc2Z1ZXJ6b3MgaGFjaWEgbWV0YXMgY29tdW5lcy4iKV0pXSldKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG1iLTMgbWItbGctMCJ9LFtfYygncCcsW192bS5fdigiVW5hIGVtcHJlc2EgZGUgY2FsemFkbyBwcm95ZWN0YSB2ZW5kZXIgMTAsMDAwIHBhcmVzIGVuIGVsIHByw7N4aW1vIHRyaW1lc3RyZSBhIHVuIHByZWNpbyB1bml0YXJpbyBkZSAkNTAsIGdlbmVyYW5kbyBpbmdyZXNvcyBlc3BlcmFkb3MgZGUgJDUwMCwwMDAuIENvbiBjb3N0b3MgZGUgcHJvZHVjY2nDs24gZGUgJDMwMCwwMDAsIGVsIHByZXN1cHVlc3RvIGxlIHBlcm1pdGUgcGxhbmlmaWNhciBsYSBhZHF1aXNpY2nDs24gZGUgbWF0ZXJpYWxlcywgbGEgY29udHJhdGFjacOzbiBkZSBwZXJzb25hbCB5IGxhIHByb2R1Y2Npw7NuLCBhc2VndXJhbmRvIHJlbnRhYmlsaWRhZCB5IGVmaWNpZW5jaWEgb3BlcmF0aXZhLiIpXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0aXR1bG8tZmlndXJhIG1iLTQifSxbX2MoJ2g1JyxbX3ZtLl92KCJUYWJsYSAxLiIpXSksX2MoJ3NwYW4nLFtfdm0uX3YoIlByZXN1cHVlc3RvIGRlIHVuYSBlbXByZXNhIGRlIG1vYmlsaWFyaW8gZXNjb2xhciIpXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRhYmxhLWEgY29sb3ItYWNlbnRvLWJvdG9uZXMifSxbX2MoJ3RhYmxlJyxbX2MoJ3RoZWFkJyxbX2MoJ3RyJyxbX2MoJ3RoJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIGJnLWNvbG9yLTMgdGV4dC13aGl0ZSIsYXR0cnM6eyJ3aWR0aCI6IjMwJSJ9fSxbX3ZtLl92KCJDb25jZXB0byIpXSksX2MoJ3RoJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIGJnLWNvbG9yLTMgdGV4dC13aGl0ZSJ9LFtfdm0uX3YoIkPDoWxjdWxvIildKSxfYygndGgnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIgYmctY29sb3ItMyB0ZXh0LXdoaXRlIixhdHRyczp7IndpZHRoIjoiMzAlIn19LFtfdm0uX3YoIlZhbG9yIildKV0pXSksX2MoJ3Rib2R5JyxbX2MoJ3RyJyxbX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtYm9sZCJ9LFtfdm0uX3YoIkluZ3Jlc29zIGVzdGltYWRvcyIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiMSwwMDAgw5cgJDUwIildKSxfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCIkNTAsMDAwIildKV0pLF9jKCd0cicsW19jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWJvbGQifSxbX3ZtLl92KCJDb3N0b3MgdmFyaWFibGVzIildKSxfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCIxLDAwMCDDlyAkMjAiKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIiQyMCwwMDAiKV0pXSksX2MoJ3RyJyxbX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtYm9sZCJ9LFtfdm0uX3YoIkNvc3RvcyBmaWpvcyIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiLSIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiJDE1LDAwMCIpXSldKSxfYygndHInLFtfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1ib2xkIn0sW192bS5fdigiVXRpbGlkYWQgYnJ1dGEiKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIiQ1MCwwMDAgLSAkMjAsMDAwIC0gJDE1LDAwMCIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIHRleHQtYm9sZCJ9LFtfdm0uX3YoIiQxNSwwMDAiKV0pXSldKV0pXSksX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCBwLTQgYmctY29sb3ItNCJ9LFtfdm0uX3YoIkVzdGUgcHJlc3VwdWVzdG8gcGVybWl0ZSBwcmV2ZXIgcmVudGFiaWxpZGFkIHkgb3B0aW1pemFyIGxhIGFzaWduYWNpw7NuIGRlIHJlY3Vyc29zLCBldml0YW5kbyBzb2JyZWNvc3RvcyB5IGFqdXN0YW5kbyBsYSBwcm9kdWNjacOzbiBhIGxhIGRlbWFuZGEgcHJveWVjdGFkYS4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS84LnBuZyIpLCJhbHQiOiIiLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzFfMiIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjEuMiIpXSksX3ZtLl92KCIgUmVsYWNpw7NuIGVudHJlIHByZXN1cHVlc3RvLCBwbGFuZWFjacOzbiBlc3RyYXTDqWdpY2EgeSB0b21hIGRlIGRlY2lzaW9uZXMiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJiZy1mdWxsLXdpZHRoLTIgYmctY29sb3ItMSBtYi01In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicHgtNCBweC1tZC01IHBiLW1kLTMifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNyBvcmRlci0yIixhdHRyczp7ImRhdGEtYW9zIjoiZmFkZS1sZWZ0In19LFtfYygncCcsW192bS5fdigiRHVyYW50ZSBsYSBwbGFuZWFjacOzbiBlc3RyYXTDqWdpY2EsIGVsIHByZXN1cHVlc3RvIGRlZmluZSBtZXRhcyB5IGVzdGFibGVjZSBwYXLDoW1ldHJvcyBkZSBldmFsdWFjacOzbiBwYXJhIGRhciBzZWd1aW1pZW50byBhIGxhIGVqZWN1Y2nDs24gb3BlcmF0aXZhLiBQb3IgZWplbXBsbywgZW4gZWwgbGFuemFtaWVudG8gZGUgdW4gbnVldm8gcHJvZHVjdG8sIGVsIHByZXN1cHVlc3RvIHB1ZWRlIGluY2x1aXIgY29zdG9zIGRlIHByb2R1Y2Npw7NuLCBpbnZlcnNpw7NuIGVuIG1hcmtldGluZyB5IHByb3llY2Npw7NuIGRlIHZlbnRhcy4gU2kgc2UgcHJveWVjdGEgdW5hIGFsdGEgcmVudGFiaWxpZGFkLCBzZSBqdXN0aWZpY2EgbGEgYXNpZ25hY2nDs24gZGUgbWF5b3JlcyByZWN1cnNvcyBhIGxhIGluaWNpYXRpdmEsIGFsaW5lYW5kbyBsYSBlc3RyYXRlZ2lhIGVtcHJlc2FyaWFsIGNvbiBsYSByZWFsaWRhZCBkZWwgbWVyY2Fkby4iKV0pLF9jKCdwJyxbX3ZtLl92KCJBc2ltaXNtbywgbGEgaW50ZWdyYWNpw7NuIGRlIGxhIGluZm9ybWFjacOzbiBwcmVzdXB1ZXN0YXJpYSBwZXJtaXRlIGlkZW50aWZpY2FyIGRlc3ZpYWNpb25lcyB5IGFwbGljYXIgbWVkaWRhcyBjb3JyZWN0aXZhcywgZm9ydGFsZWNpZW5kbyBsYSBjYXBhY2lkYWQgZGUgcmVzcHVlc3RhIGFudGUgY2FtYmlvcyBlbiBlbCBlbnRvcm5vLiBQYXJhIGVsbG8sIGVzIHJlY29tZW5kYWJsZSByZXZpc2FyIHkgYWN0dWFsaXphciBwZXJpw7NkaWNhbWVudGUgZWwgcHJlc3VwdWVzdG8sIGFzZWd1cmFuZG8gc3UgYWxpbmVhY2nDs24gY29uIGxhIGVzdHJhdGVnaWEgb3JnYW5pemFjaW9uYWwuIildKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTUgb3JkZXItMSBtYi0zIG1iLWxnLTAiLGF0dHJzOnsiZGF0YS1hb3MiOiJ6b29tLWluIn19LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6ImltZy1mbHVpZCBteC1hdXRvIG14LWxnLTAgbXMtbGctYXV0byBtYi00IG1iLWxnLTAiLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiNDg2cHgifSxhdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvOS5zdmciKSwiYWx0IjoiIn19KV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLWZpZ3VyYSBtYi00In0sW19jKCdoNScsW192bS5fdigiVGFibGEgMi4iKV0pLF9jKCdzcGFuJyxbX3ZtLl92KCJQcmVzdXB1ZXN0byBwYXJhIHVuYSBwbGF0YWZvcm1hIGRpZ2l0YWwiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoidGFibGEtYSBjb2xvci1hY2VudG8tYm90b25lcyJ9LFtfYygndGFibGUnLFtfYygndGhlYWQnLFtfYygndHInLFtfYygndGgnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIgYmctY29sb3ItMyB0ZXh0LXdoaXRlIixhdHRyczp7IndpZHRoIjoiNDAlIn19LFtfdm0uX3YoIkNvbmNlcHRvIildKSxfYygndGgnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIgYmctY29sb3ItMyB0ZXh0LXdoaXRlIn0sW192bS5fdigiQ8OhbGN1bG8iKV0pLF9jKCd0aCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciBiZy1jb2xvci0zIHRleHQtd2hpdGUiLGF0dHJzOnsid2lkdGgiOiIyMCUifX0sW192bS5fdigiVmFsb3IiKV0pXSldKSxfYygndGJvZHknLFtfYygndHInLFtfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1ib2xkIn0sW192bS5fdigiVmVudGFzIHByb3llY3RhZGFzIildKSxfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCIxMCwwMDAgZGVzY2FyZ2FzIMOXICQxMCIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiJDEwMCwwMDAiKV0pXSksX2MoJ3RyJyxbX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtYm9sZCJ9LFtfdm0uX3YoIkNvc3RvcyBkZSBkZXNhcnJvbGxvIHkgb3BlcmFjacOzbiIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiLSIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiJDUwLDAwMCIpXSldKSxfYygndHInLFtfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1ib2xkIn0sW192bS5fdigiSW52ZXJzacOzbiBlbiBtYXJrZXRpbmciKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIi0iKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIiQyMCwwMDAiKV0pXSksX2MoJ3RyJyxbX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtYm9sZCJ9LFtfdm0uX3YoIlV0aWxpZGFkIGJydXRhIHByb3llY3RhZGEiKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIiQxMDAsMDAwIC0gJDUwLDAwMCAtICQyMCwwMDAiKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciB0ZXh0LWJvbGQifSxbX3ZtLl92KCIkMzAsMDAwIildKV0pXSldKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InAtNSBiZy1jb2xvci0xMCJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW192bS5fdigiRWwgYW7DoWxpc2lzIHByZXN1cHVlc3RhcmlvIGluZGljYSB1biBtYXJnZW4gZGUgcmVudGFiaWxpZGFkIGZhdm9yYWJsZSwgbG8gcXVlIHBlcm1pdGUgaW52ZXJ0aXIgZW4gY2FtcGHDsWFzIGFkaWNpb25hbGVzIGRlIG1hcmtldGluZyB5IG1lam9yYXMgdGVjbm9sw7NnaWNhcy4gTGEgcmV2aXNpw7NuIGNvbnRpbnVhIGRlbCBwcmVzdXB1ZXN0byBhc2VndXJhIHF1ZSBsYSBlc3RyYXRlZ2lhIHNlIGFqdXN0ZSBhIGxhIHJlc3B1ZXN0YSBkZWwgbWVyY2FkbywgZm9ydGFsZWNpZW5kbyBsYSB0b21hIGRlIGRlY2lzaW9uZXMgYmFzYWRhcyBlbiBkYXRvcy4iKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzFfMyIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjEuMyIpXSksX3ZtLl92KCIgQ29tcG9uZW50ZXMgZGVsIHByZXN1cHVlc3RvIGRlIHByb2R1Y2Npw7NuIHkgdmVudGFzIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTQgbWItMyBtYi1sZy0wIn0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im1iLTQgbWItbGctMCIsYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzEwLnBuZyIpLCJhbHQiOiIifX0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWZ1bGwtd2lkdGggYmctY29sb3ItMTAgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InB4LTQgcHgtbWQtNSBweS00In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGFsaWduLWl0ZW1zLWNlbnRlciJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy1hdXRvIn0sW19jKCdpbWcnLHtzdGF0aWNDbGFzczoibXgtYXV0byIsc3RhdGljU3R5bGU6eyJtYXgtd2lkdGgiOiI5MHB4In0sYXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzExLnN2ZyIpfX0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGcifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoibWItMCJ9LFtfdm0uX3YoIkVzdG9zIGVsZW1lbnRvcyBwZXJtaXRlbiBhIGxhcyBvcmdhbml6YWNpb25lcyBhanVzdGFyIHN1IGNhcGFjaWRhZCBwcm9kdWN0aXZhIHkgZXN0cmF0ZWdpYXMgY29tZXJjaWFsZXMgYSBsYXMgY29uZGljaW9uZXMgZGVsIG1lcmNhZG8sIGV2aXRhbmRvIHByb2JsZW1hcyBjb21vIGxhIHNvYnJlcHJvZHVjY2nDs24gbyBsYSBlc2Nhc2V6IGRlIHByb2R1Y3Rvcy4iKV0pXSldKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ0aXR1bG8tZmlndXJhIG1iLTQifSxbX2MoJ2g1JyxbX3ZtLl92KCJGaWd1cmEgMS4gIildKSxfYygnc3BhbicsW192bS5fdigiQ29tcG9uZW50ZSBkZWwgcHJlc3VwdWVzdG8gZGUgcHJvZHVjY2nDs24geSB2ZW50YXMuIildKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicC01IGJnLWNvbG9yLTE1IG1iLTUifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTIuc3ZnIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy04IG1iLTMgbWItbGctMCJ9LFtfYygncCcsW192bS5fdigiQ29uc2lkw6lyZXNlIHVuYSBlbXByZXNhIGRlZGljYWRhIGEgbGEgZmFicmljYWNpw7NuIGRlIGFydMOtY3Vsb3MgZGUgcGFwZWxlcsOtYSBxdWUgcHJveWVjdGEgbGEgdmVudGEgZGUgNSwwMDAgY3VhZGVybm9zIGVuIGVsIHByw7N4aW1vIHRyaW1lc3RyZSwgYSB1biBwcmVjaW8gdW5pdGFyaW8gZGUgJDIsIGdlbmVyYW5kbyBpbmdyZXNvcyBlc3RpbWFkb3MgZGUgJDEwLDAwMC4gU2UgZGlzcG9uZSBkZSB1biBpbnZlbnRhcmlvIGluaWNpYWwgZGUgNTAwIGN1YWRlcm5vcyB5IHNlIHJlcXVpZXJlIG1hbnRlbmVyIHVuIGludmVudGFyaW8gZmluYWwgZGUgMzAwIHVuaWRhZGVzLiIpXSksX2MoJ3AnLFtfdm0uX3YoIlBhcmEgZGV0ZXJtaW5hciBsYSBjYW50aWRhZCBkZSBjdWFkZXJub3MgcXVlIHNlIGRlYmVuIHByb2R1Y2lyLCBzZSB1dGlsaXphIGxhIHNpZ3VpZW50ZSBmw7NybXVsYToiKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctaDg1In0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoicm93IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIHAtMyBwLWxnLTAifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctMyJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMy5zdmciKSwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctOSJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW192bS5fdigiUHJvZHVjY2nDs24gbmVjZXNhcmlhID0gVmVudGFzIHByb3llY3RhZGFzICsgSW52ZW50YXJpbyBmaW5hbCBkZXNlYWRvIOKAkyBJbnZlbnRhcmlvIGluaWNpYWwiKV0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiYmctY29sb3ItMTMifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1jZW50ZXIgcC0zIHAtbGctMCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00IG9yZGVyLTIifSxbX2MoJ2ZpZ3VyZScsW19jKCdpbWcnLHthdHRyczp7InNyYyI6cmVxdWlyZSgiQC9hc3NldHMvY3Vyc28vdGVtYTEvMTQuc3ZnIiksImRhdGEtYW9zIjoiem9vbS1pbiJ9fSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTggb3JkZXItMSJ9LFtfYygncCcse3N0YXRpY0NsYXNzOiJtYi0wIn0sW192bS5fdigiUHJvZHVjY2nDs24gbmVjZXNhcmlhID0gNSwwMDAgKyAzMDAg4oCTIDUwMCA9IDQsODAwIGN1YWRlcm5vcyIpXSldKV0pXSldKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy00In0sW19jKCdmaWd1cmUnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOnJlcXVpcmUoIkAvYXNzZXRzL2N1cnNvL3RlbWExLzE1LnBuZyIpLCJhbHQiOiIiLCJkYXRhLWFvcyI6Inpvb20taW4ifX0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLWZpZ3VyYSBtYi00In0sW19jKCdoNScsW192bS5fdigiVGFibGEgMy4iKV0pLF9jKCdzcGFuJyxbX3ZtLl92KCJSZWxhY2nDs24gZW50cmUgcHJlc3VwdWVzdG8gZGUgdmVudGFzIHkgcHJvZHVjY2nDs24iKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cgbWItNSBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnLTEwIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoidGFibGEtYSBjb2xvci1hY2VudG8tYm90b25lcyJ9LFtfYygndGFibGUnLFtfYygndGhlYWQnLFtfYygndHInLFtfYygndGgnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIgYmctY29sb3ItMyB0ZXh0LXdoaXRlIixhdHRyczp7IndpZHRoIjoiNDAlIn19LFtfdm0uX3YoIkVsZW1lbnRvIildKSxfYygndGgnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIgYmctY29sb3ItMyB0ZXh0LXdoaXRlIn0sW192bS5fdigiQ8OhbGN1bG8iKV0pLF9jKCd0aCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciBiZy1jb2xvci0zIHRleHQtd2hpdGUiLGF0dHJzOnsid2lkdGgiOiIyMCUifX0sW192bS5fdigiVmFsb3IiKV0pXSldKSxfYygndGJvZHknLFtfYygndHInLFtfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1ib2xkIn0sW192bS5fdigiVmVudGFzIHByb3llY3RhZGFzIildKSxfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCItIildKSxfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1jZW50ZXIifSxbX3ZtLl92KCI1LDAwMCBjdWFkZXJub3MiKV0pXSksX2MoJ3RyJyxbX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtYm9sZCJ9LFtfdm0uX3YoIkludmVudGFyaW8gZmluYWwgZGVzZWFkbyIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiLSIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiMzAwIGN1YWRlcm5vcyIpXSldKSxfYygndHInLFtfYygndGQnLHtzdGF0aWNDbGFzczoidGV4dC1ib2xkIn0sW192bS5fdigiSW52ZW50YXJpbyBpbmljaWFsIGRpc3BvbmlibGUiKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIi0iKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciJ9LFtfdm0uX3YoIjUwMCBjdWFkZXJub3MiKV0pXSksX2MoJ3RyJyxbX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtYm9sZCJ9LFtfdm0uX3YoIlByb2R1Y2Npw7NuIG5lY2VzYXJpYSIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiNSwwMDAgKyAzMDAgLSA1MDAiKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciB0ZXh0LWJvbGQifSxbX3ZtLl92KCI0LDgwMCBjdWFkZXJub3MiKV0pXSksX2MoJ3RyJyxbX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtYm9sZCJ9LFtfdm0uX3YoIkluZ3Jlc29zIGVzdGltYWRvcyIpXSksX2MoJ3RkJyx7c3RhdGljQ2xhc3M6InRleHQtY2VudGVyIn0sW192bS5fdigiNSwwMDAgw5cgJDIiKV0pLF9jKCd0ZCcse3N0YXRpY0NsYXNzOiJ0ZXh0LWNlbnRlciB0ZXh0LWJvbGQifSxbX3ZtLl92KCIkMTAsMDAwIildKV0pXSldKV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoicC01IGJnLWNvbG9yLTEwIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAifSxbX3ZtLl92KCJFbiBlc3RlIGVqZW1wbG8sIGVsICIpLF9jKCdiJyxbX3ZtLl92KCJwcmVzdXB1ZXN0byBkZSB2ZW50YXMiKV0pLF92bS5fdigiIGRlZmluZSBsYSBtZXRhIGRlIGluZ3Jlc29zIHkgdm9sdW1lbiBkZSB2ZW50YXMsIG1pZW50cmFzIHF1ZSBlbCAiKSxfYygnYicsW192bS5fdigicHJlc3VwdWVzdG8gZGUgcHJvZHVjY2nDs24iKV0pLF92bS5fdigiIHNlIGVuY2FyZ2EgZGUgY2FsY3VsYXIgbGEgY2FudGlkYWQgZXhhY3RhIGEgcHJvZHVjaXIsIGNvbnNpZGVyYW5kbyBsb3MgaW52ZW50YXJpb3MuIEZpbmFsbWVudGUsIGxhICIpLF9jKCdiJyxbX3ZtLl92KCJmaWphY2nDs24gZGUgcHJlY2lvcyIpXSksX3ZtLl92KCIgc2UgZXN0YWJsZWNlIGVuIGZ1bmNpw7NuIGRlIGxvcyBjb3N0b3MgaW5jdXJyaWRvcyB5IGVsIHZhbG9yIHF1ZSBlbCBtZXJjYWRvIGFzaWduYSBhbCBwcm9kdWN0bywgYXNlZ3VyYW5kbyBsYSByZW50YWJpbGlkYWQgeSBjb21wZXRpdGl2aWRhZC4iKV0pXSldKV0pfSxmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczoidGl0dWxvLXNlZ3VuZG8iLGF0dHJzOnsiaWQiOiJ0XzFfNCIsImRhdGEtYW9zIjoiZmxpcC11cCJ9fSxbX2MoJ2gyJyxbX2MoJ3NwYW4nLFtfdm0uX3YoIjEuNCIpXSksX3ZtLl92KCIgSW1wb3J0YW5jaWEgZGVsIGNvbnRyb2wgcHJlc3VwdWVzdGFyaW8gZW4gbGEgZWZpY2llbmNpYSBvcGVyYXRpdmEiKV0pXSl9LGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIgbWItNSJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC1sZy03IG9yZGVyLTIifSxbX2MoJ3AnLFtfdm0uX3YoIkVsIGNvbnRyb2wgcHJlc3VwdWVzdGFyaW8gZXMgdW4gcHJvY2VzbyBpbnRlZ3JhbCBxdWUgcGVybWl0ZSBtb25pdG9yZWFyIGVsIGN1bXBsaW1pZW50byBkZSBsYXMgcHJveWVjY2lvbmVzIGZpbmFuY2llcmFzIHkgb3B0aW1pemFyIGxhIGFzaWduYWNpw7NuIGRlIHJlY3Vyc29zIGVuIGxhIG9yZ2FuaXphY2nDs24uIENvbnNpc3RlIGVuIGNvbXBhcmFyIGxvcyByZXN1bHRhZG9zIHJlYWxlcyBjb24gbG9zIHByZXN1cHVlc3RvcyBwbGFuaWZpY2Fkb3MsIGlkZW50aWZpY2FuZG8gZGVzdmlhY2lvbmVzIHkgZmFjaWxpdGFuZG8gbGEgaW1wbGVtZW50YWNpw7NuIGRlIG1lZGlkYXMgY29ycmVjdGl2YXMgcGFyYSBhbGluZWFyIGxhIG9wZXJhY2nDs24gY29uIGxvcyBvYmpldGl2b3MgZXN0cmF0w6lnaWNvcy4iKV0pLF9jKCdwJyxbX3ZtLl92KCJBbCBpbnRlZ3JhciBlbCBjb250cm9sIHByZXN1cHVlc3RhcmlvIGVuIGxhIGdlc3Rpw7NuIGRpYXJpYSwgc2UgZm9ydGFsZWNlIGxhIHRvbWEgZGUgZGVjaXNpb25lcyBiYXNhZGEgZW4gaW5mb3JtYWNpw7NuIGN1YW50aWZpY2FibGUgeSBhY3R1YWxpemFkYS4gRXN0ZSBlbmZvcXVlIG5vIHNvbG8gcGVybWl0ZSBkZXRlY3RhciDDoXJlYXMgZGUgbWVqb3JhIGVuIGVsIGRlc2VtcGXDsW8gZmluYW5jaWVybywgc2lubyBxdWUgdGFtYmnDqW4gY29udHJpYnV5ZSBhIGxhIHNvc3RlbmliaWxpZGFkIHkgY29tcGV0aXRpdmlkYWQgZGUgbGEgb3JnYW5pemFjacOzbiBlbiB1biBlbnRvcm5vIGRpbsOhbWljby4iKV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctNSBtYi0zIG1iLWxnLTAgb3JkZXItMSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xNi5wbmciKSwiYWx0IjoiIiwiZGF0YS1hb3MiOiJ6b29tLWluIn19KV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImJnLWZ1bGwtd2lkdGggYmctY29sb3ItMTYifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJweC00IHB4LW1kLTUgcHktNCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIifSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjb2wtbGctYXV0byJ9LFtfYygnaW1nJyx7c3RhdGljQ2xhc3M6Im14LWF1dG8iLHN0YXRpY1N0eWxlOnsibWF4LXdpZHRoIjoiOTBweCJ9LGF0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xOC5zdmciKX19KV0pLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoiY29sLWxnIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6Im1iLTAgdGV4dC13aGl0ZSJ9LFtfdm0uX3YoIkVzdGUgY3VhZHJvIHNpbnRldGl6YSBlbCBwcm9jZXNvIGRlIGNvbnRyb2wgcHJlc3VwdWVzdGFyaW8sIGVuIGVsIGN1YWwgc2UgcGxhbmlmaWNhIGVsIGluY3JlbWVudG8gZGUgaW5ncmVzb3MsIHNlIHJlYWxpemEgdW4gc2VndWltaWVudG8gZGUgbG9zIHJlc3VsdGFkb3MsIHNlIGFuYWxpemFuIGxhcyBkZXN2aWFjaW9uZXMgeSBzZSBpbXBsZW1lbnRhbiBhY2Npb25lcyBjb3JyZWN0aXZhcyBwYXJhIHJlc3RhYmxlY2VyIGVsIGVxdWlsaWJyaW8gZW50cmUgbG8gcGxhbmlmaWNhZG8geSBsbyByZWFsLCBmb3J0YWxlY2llbmRvIGxhIGVmaWNpZW5jaWEgb3BlcmF0aXZhLiIpXSldKV0pXSldKX0sZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImNvbC0xMiBjb2wtbWQtNiBjb2wtbGctMyBvZmZzZXQtbGctMSJ9LFtfYygnZmlndXJlJyxbX2MoJ2ltZycse2F0dHJzOnsic3JjIjpyZXF1aXJlKCJAL2Fzc2V0cy9jb21wb25lbnRlcy9tYXRlcmlhbC1jb21wbGVtZW50YXJpby5zdmciKSwiYWx0IjoiIn19KV0pXSl9XQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}